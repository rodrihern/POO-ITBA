@startuml


interface Iterable {
    Iterator<Piece> iterator()
}

class Board {
    -Piece[][] board
    -Move lastMove
    -Move prevLastMove
    +void makeMove(Move newMove)
    +void undo()
    -boolean isValid(Move move)
}

class Piece {
    -PieceType type
    -Color color
    -Square sq
    +Piece(PieceType type, Color color, Square sq)
    +boolean equals(Object o)
    +String toString()
    +boolean canMoveTo(Square sq)
    +void moveTo(Square sq)
}

class Move {
    -Piece piece
    -Square from
    -Square to
    +Move(String move, Color color)
    +Piece getPiece()
    +Square getFrom()
    +Square getTo()
}

class Square {
    -int row
    -int col
    +Square(int row, int col)
    +Square(String sq)
    +int getRow()
    +int getCol()
}

enum Color {
    +BLACK
    +WHITE
}

enum Direction {
    +UP, DOWN, LEFT, RIGHT, UPRIGHT, UPLEFT, DOWNRIGHT, DOWNLEFT
    +int rowInc()
    +int colInc()
}

enum PieceType {
    +KING, QUEEN, ROOK, BISHOP, KNIGHT, PAWN
    +String toString()
    +canMove(Square from, Square to)
}

Board *- Move
Move *- Square
Move *-- Piece
Board *- Piece
Iterable <|.. Board
Piece *- Square
PieceType -* Piece
Piece *-- Direction
Piece *-- Color

@enduml